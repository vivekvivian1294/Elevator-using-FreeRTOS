SIGNAL void randomCase() {
	//The random events works as following:
	//1. Generate events for which button should be pressed
	//2. run the loop
	//3. inside the loop generate also some random events (every 5 secs)
	
	
  int pos;
  int i, j;
  int lastPulsePinValue;
	//reached variables: variables used 
	//when the elevator is located at a floor,
	//to set the door_once variables
  int reached1, reached2, reached3;
	//to_floor variables are set to 1 once a to_floor button is pressed.
	//It is being used for resetting the pins after 2 seconds
	int to_floor1, to_floor2, to_floor3;
  int at_floor;
	//initial floor variables (random variables)
	int initialFloor1;
	int initialFloor2;
	int initialFloor3;
	int button_pressed;
	//variable for toggling if the stop button is pressed, used
	//again for resetting the pins
	int stop_button_pressed;
	//random variable for pressing the stop button
	int random_stop;
	//door_once variables: variables that opens the door once while it is on
	//a floor
	int open_door_once;
	int close_door_once;
	
	
	pos = 0;
	
	//set the reached variables to 0
	reached1 = 0;
	reached2 = 0;
	reached3 = 0;
	
	//set the stop_button_pressed
	stop_button_pressed = 0;
	
	//set the door_once variables to 0
	open_door_once = 0;
	close_door_once = 0;
	
		printf("Starting random test!\n");
		//initialize the random floor variables to 0
		initialFloor1 = 0;
		initialFloor2 = 0;
		initialFloor3 = 0;
		
		
		// we run the elevator
		for (j = 0; j > -1; ++j) {
			
			if(j == 50000)
			{
				j = 1;
			}
			at_floor = 0;
			
			
			// every second, check whether we are at a floor
			if ((PORTC & (1 << 7)) && !TIM3_CCR1 && !TIM3_CCR2) {
				
				if (pos >= 0 && pos <= 1 && !reached1) {
								// reached floor 1
								printf("arrived at floor 1\n");
								//set at_floor variable to 1 
								//(variable for opening and closing doors)
								at_floor = 1;
								//set the reached variables 
								//(variable used for going through this if statement once)
								reached1 = 1;
								reached2 = 0;
								reached3 = 0;
								//set the door_once variables to 1
								open_door_once = 1;
								close_door_once = 1;
							}
							if (pos >= 399 && pos <= 401 && !reached2) {
								// reached floor 2
								printf("arrived at floor 2\n");
								//set at_floor variable to 1 
								//(variable for opening and closing doors)
								at_floor = 1;
								//set the reached variables 
								//(variable used for going through this if statement once)
								reached1 = 0;
								reached2 = 1;
								reached3 = 0;
								//set the door_once variables to 1
								open_door_once = 1;
								close_door_once = 1;
							}
							if (pos >= 799 && pos <= 801 && !reached3) {
								// reached floor 3
								printf("arrived at floor 3\n");
								at_floor = 1;
								//set the reached variables 
								//(variable used for going through this if statement once)
								reached1 = 0;
								reached2 = 0;
								reached3 = 1;
								//set the door_once variables to 1
								open_door_once = 1;
								close_door_once = 1;
							}
			}
			// if we have stopped at a floor, we open the doors for 1s
			if (at_floor && open_door_once && j > 0)
			{
				printf("Opening doors!\n");
				PORTC ^= 1 << 8;
				open_door_once = 0;
			}
			// wait 1s
				for (i = 0; i < 400; ++i) {
					if (lastPulsePinValue < (PORTC & (1 << 9))) {
						if (TIM3_CCR1) pos += 1;
						if (TIM3_CCR2) pos -= 1;
					}
					lastPulsePinValue = PORTC & (1 << 9);
					swatch(0.0025);
				}
				//close the doors
				if (at_floor && close_door_once)
				{
					printf("Closing doors!\n");
					PORTC ^= 1 << 8;
					close_door_once = 0;
				}
				
				//every 2 seconds reset the pins	
			if(j % 3 == 2)
			{
				printf("Resetting pins\n");
				if(to_floor1)
				{
					// reset pin 0
					PORTC ^= 1 << 0;
					to_floor1 = 0;
				}
				if(to_floor2)
				{
					// reset pin 1
					PORTC ^= 1 << 1;
					to_floor2 = 0;
				}
				if(to_floor3)
				{
					// reset pin 2
					PORTC ^= 1 << 2;
					to_floor3 = 0;
				}
				if (stop_button_pressed)
				{
					PORTC ^= 1 << 3;
					stop_button_pressed = 0;
				}
			}
			// every 5 seconds, generate randmom events
			if(j % 6 == 5)
			{
				printf("Generate new events inside the loop:\n");
				initialFloor1 = rand(0)%2;
				initialFloor2 = rand(0)%2;
				initialFloor3 = rand(0)%2;
				random_stop = rand(0)%100;
				
				if(initialFloor1)
				{
					PORTC |= 1 << 0;
					printf("Button Floor 1 pressed\n");
					initialFloor1 = 0;
					to_floor1 = 1;
				}
				if(initialFloor2)
				{
					PORTC |= 1 << 1;
					printf("Button Floor 2 pressed\n");
					initialFloor2 = 0;
					to_floor2 = 1;
				}
				if(initialFloor3)
				{
					PORTC |= 1 << 2;
					printf("Button Floor 3 pressed\n");
					initialFloor3 = 0;
					to_floor3 = 1;
				}
				//the stop button should not be pressed so often
				if(random_stop > 96)
				{
					PORTC |= 1 << 3;
					printf("Stop button pressed\n");
					stop_button_pressed = 1;
				}
			}
		}
}